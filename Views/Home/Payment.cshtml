@model SimplifyCommerce.Payments.Payment

@{
    ViewBag.Title = "Payment";
}
@using (Html.BeginForm("Payment", "Home", FormMethod.Post, new { @id = "Payment", autocomplete = "off" }))
{
    <div class="main-content payment">

        <div class="row">
            <div class="left-sidebar">
                <div class="page-heading"><h1 class="page-title"><b>Complete </b>Purchase</h1><span class="line"><hr></span></div>
            </div>
            <h5 style="color:#ff0000">@ViewBag.message</h5>
            <p name="countdown" style="color: Red;text-align: right; font-size: 14px; font-weight: bold;"></p>
            <div class="right-sidebar payment-area">
                <div class="row">
                    <div class="col-sm-12" style="padding-bottom:10px">
                        <div class="payment-detail">
                            <h4>ORDER SUMMARY</h4>
                            <div class="gray_block">
                                <p>Visitation Date & time</p>
                                <b>
                                    @if (SessionVariables.Date != null)
                                    {
                                        <span>@(SessionVariables.Date.Value.ToString("dddd, dd MMMM yyyy"))</span>
                                        <br />
                                    }
                                    @if (SessionVariables.Availalbe > 0)
                                    {
                                        <span class="time">AT @DateTime.Now.Date.AddTicks(SessionVariables.StartTime.Ticks).ToString("hh:mm tt")</span>
                                        <br />
                                    }
                                    <span class="attraction">@SessionVariables.AttrationName</span><br>
                                    <span class="promotions">@SessionVariables.PromotionTitle</span>
                                </b>
                            </div>
                            <div class="table-responsive">
                                <table class="table">
                                    <thead>

                                    </thead>
                                    <tbody>
                                        @{
                                            var x = ViewBag.TicketTable;
                                            var GrandTotal = 0.0;
                                            var totalTicket = 0;
                                            var Total = 0.0;
                                            foreach (var item in ViewBag.TicketTable)
                                            {
                                                if (item.TicketQuantity > 0)
                                                {
                                                    GrandTotal = GrandTotal + ((item.TicketQuantity * item.i_TicketPrice) + (item.TicketQuantity * item.i_BookingFee));
                                                    totalTicket = totalTicket + item.TicketQuantity;
                                                    Total = (item.TicketQuantity * item.i_TicketPrice) + (item.TicketQuantity * item.i_BookingFee);
                                                }
                                                else
                                                {
                                                    Total = 0.0;
                                                }


                                                <tr>
                                                    <th>@item.v_TicketTypeDesc</th>
                                                    <td><label>@item.TicketQuantity</label> Ticket(s)</td>
                                                    <td>AED <label>@(string.Format("{0:0.00}", Total))</label></td>
                                                </tr>
                                            }
                                            <tr>
                                                <th>Grand Total</th>
                                                <th><label>@totalTicket</label> Ticket(s)</th>
                                                <td name="GrandTotal">AED <label>@string.Format("{0:0.00}", GrandTotal)</label></td>@**@
                                                @Html.HiddenFor(model => model.Amount, new { @id = "totalAmount" })
                                            </tr>
                                        }

                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-7">
                        <div class="payment-form">
                            <div class="card">
                                <span>We accept</span>
                                <a href="#"><img src="@Url.Content("~/Content/images/visa-card.jpg")"></a>
                                <a href="#"><img src="@Url.Content("~/Content/images/mastercard.jpg")"></a>
                                <a href="#"><img src="@Url.Content("~/Content/images/card-img3.jpg")"></a>
                            </div>

                            <div class="form-group">
                                @*<input type="email" class="form-control" id="exampleInputEmail1" placeholder="Card Number">*@
                                @Html.TextBoxFor(model => model.Card.Number, new { @class = "form-control", @id = "number", @placeholder = "Card Number", @required = "true" })
                            </div>
                            <div class="form-group">
                                @*<input type="email" class="form-control" id="exampleInputEmail1" placeholder="Name On Card">*@
                                @Html.TextBoxFor(model => model.Card.Name, new { @class = "form-control", @id = "NameOnCard", @placeholder = "Name On Card" })
                            </div>


                            @Html.DropDownListFor(m => m.Card.ExpMonth, new List<SelectListItem>{ new SelectListItem { Value = "", Text = "Select Month" },
                                        new SelectListItem { Value = "01", Text = "January" },
                                        new SelectListItem { Value = "02", Text = "February" },
                                        new SelectListItem { Value = "03", Text = "March" },
                                        new SelectListItem { Value = "04", Text = "April" },
                                        new SelectListItem { Value = "05", Text = "May" },
                                        new SelectListItem { Value = "06", Text = "June" },
                                        new SelectListItem { Value = "07", Text = "July" },
                                        new SelectListItem { Value = "08", Text = "August" },
                                        new SelectListItem { Value = "09", Text = "September" },
                                        new SelectListItem { Value = "10", Text = "October" },
                                        new SelectListItem { Value = "11", Text = "November" },
                                        new SelectListItem { Value = "12", Text = "December" }
                       }, new { @class = "form-control month", @id = "expMonth" })

                            @Html.DropDownListFor(m => m.Card.ExpYear, new List<SelectListItem>{ new SelectListItem { Value = "", Text = "Select Year" },
                                        new SelectListItem { Value = "16", Text = "2016" },
                                        new SelectListItem { Value = "17", Text = "2017" },
                                        new SelectListItem { Value = "18", Text = "2018" },
                                        new SelectListItem { Value = "19", Text = "2019" },
                                        new SelectListItem { Value = "20", Text = "2020" },
                                        new SelectListItem { Value = "21", Text = "2021" },
                                        new SelectListItem { Value = "22", Text = "2022" },
                                        new SelectListItem { Value = "23", Text = "2023" },
                                        new SelectListItem { Value = "24", Text = "2024" },
                                        new SelectListItem { Value = "25", Text = "2025" }}, new { @class = "form-control year", @id = "expYear" })
                            <div class="form-group cache">
                                @*<input type="Country" class="form-control" placeholder="CVV">*@
                                @Html.TextBoxFor(model => model.Card.Cvc, new { @class = "form-control", @type = "text", @id = "cvv", @maxlength = 3, @placeholder = "CVV" })
                                <span><img src="@Url.Content("~/Content/images/code-img.jpg")"></span>
                                <p>last 3  digits printed on the back of the card</p>
                            </div>
                           
                            <div class="form-group">
                                <a class="black-but-big " id="complete" href="javascript:void(0);">COMPLETE PURCHASE</a>
                            </div>
                        </div>
                    </div>


                </div>
            </div>
        </div>
    </div>

                                            }
@section scripts{
    <script src="~/Scripts/jquery.cookie.js"></script>
    <script>
        $("#cvv").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 190]) !== -1 ||
                // Allow: Ctrl+A
                (e.keyCode == 65 && e.ctrlKey === true) ||
                // Allow: home, end, left, right
                (e.keyCode >= 35 && e.keyCode <= 39)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });
        $(document).ready(function () {


            var paymentamount = 0;
            $.ajax({
                url: 'http://apilayer.net/api/live?access_key=fea6a9b27f78cb649d79b00c65534bfb&currencies=AED',
                dataType: 'jsonp',
                success: function (json) {
                    console.log(json.quotes.USDAED);

                    var tmpamount = $('td[name=GrandTotal]>label').text();
                    var result = eval(tmpamount) / eval(json.quotes.USDAED)
                    var result = result.toFixed(2);
                    //alert(tmpamount.split('.').join(''));

                    console.log("Dollar : " + result.split('.').join(''));
                    console.log("AED :" + tmpamount + ",rates" + json.quotes.USDAED + "  " + tmpamount + "AED to Dollar:" + result);
                    paymentamount = result.split('.').join('');
                    $("#totalAmount").val(result.split('.').join(''));  
                   
                },
                error: function (error) {
                    alert(error.info);
                }
            });
        });
        $('.black-but-big').click(function () {
            $('#Payment').submit();

        });

    </script>
}